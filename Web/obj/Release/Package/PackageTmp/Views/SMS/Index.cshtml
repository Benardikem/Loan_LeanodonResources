@model  Web.Models.SMSModel
@{
    ViewBag.Title = "SMS Manager";
}
<style type="text/css">

    .rcorners3 {
        border-radius: 25px;
    }
</style>
@using (Html.BeginForm("Index", "SMS", FormMethod.Post, new { id = "formSMS" }))
{
    <section class="content">
        <div class="row">
            <div class="col-xl-8 col-lg-7">
                <div class="row">
                    <div class="col-12">
                        <div class="box box-solid bg-dark">
                            <div class="box-header with-border">
                                <h3 class="box-title">All SMS</h3>
                                <h6 class="box-subtitle">Sent out SMS are listed here, you can manage them from here. You can export to Copy, CSV, Excel, PDF & Print</h6>
                            </div>
                            <div class="box-body">
                                <div class="table-responsive">
                                    <table id="example" class="table table-bordered table-hover display nowrap margin-top-10 w-p100">
                                        <thead>
                                            <tr>
                                                <th>Message</th>
                                                <th>Recipients</th>
                                                <th>Units&nbsp;Used</th>
                                                <th>Status</th>
                                                <th>Activity&nbsp;Date</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.SMSItems)
                                            {
                                                <tr>
                                                    <td><a href="javascript:;" data-id="@item.Id" class="view-butto">@item.Message</a></td>
                                                    <td>@item.Recipient</td>
                                                    <td>@item.UnitsUsed</td>
                                                    <td>@item.Status</td>
                                                    <td>@item.ActivityDate</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-4 col-lg-5">
                <!-- Profile Image -->
                <div class="box bg-info bg-deathstar-dark">
                    <div class="box-body box-profile">
                        <h2 class="profile-username text-center mb-0">SMS Account Balanace and Details</h2>
                        <div class="box-body">
                            <div class="form-group">
                                <label class="mr-25">SMS Units Used</label>
                                <div class="input-group">
                                    <span id="sms-units-used"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <div class="modal fade text-left" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel17"
         aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modal-header-text">Create a Contact Category</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="BusinessName">Enter Category Name</label>
                                <input type="text" id="CategoryName" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn grey btn-outline-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-outline-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
}


<script src="~/assets/vendor_components/jquery/dist/jquery.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

       

        $("#formSMS").submit(function (e) {
            e.preventDefault();
            swal.fire({
                title: 'Create Category?',
                showCancelButton: true,
                confirmButtonText: 'Yes, Create',
                showLoaderOnConfirm: true,
                preConfirm: function () {
                    return new Promise(function (resolve) {
                        setTimeout(function () {
                            resolve();
                        }, 2000);
                    });
                },
                allowOutsideClick: false
            }).then(function () {

                $.ajax({
                    type: "POST",
                    url: "/api/SMS/create-category",
                    data: {
                        'CategoryName': $('#CategoryName').val(),
                    },
                    cache: false,
                    success: function (resp) {
                        if (resp.ResponseCode !== null && resp.ResponseCode === '00') {
                            swal.fire(
                                "Success!",
                                resp.ResponseMsg,
                                "success"
                            ).then(function () {
                                window.location.replace("../SMS/");
                            });
                        }
                        if (resp.ResponseCode !== null && resp.ResponseCode === '96') {
                            swal.fire(
                                "Error Occured!",
                                resp.ResponseMsg,
                                "warning"
                            );
                        }
                    },
                    failure: function (resp) {
                        swal.fire(
                            "Internal Error",
                            "Oops, Error Occurred.",
                            "error"
                        );
                    }
                });
            });
        });

        $("#ResetButton").click(function () {
            alert("You are about to reset the Database AFRESH.");
            $.ajax({
                type: "GET",
                url: "/Dashboard/ResetDemo",
                data: '',
                contentType: "application/json; charset=utf-8",
                async: true,
                success: function (resp) {
                    if (resp.ResponseCode !== null && resp.ResponseCode === '00') {
                        swal.fire(
                            "Success!",
                            resp.ResponseMsg,
                            "success"
                        ).then(function () {
                            window.location.replace("../Dashboard/");
                        });
                    }
                    if (resp.ResponseCode !== null && resp.ResponseCode === '96') {
                        swal.fire(
                            "Error Occured!",
                            resp.ResponseMsg,
                            "warning"
                        );
                    }
                }
            });
        });

        $('#dtable').find('.app-details').each(function (e) {
            $(this).click(function (e) {
                e.preventDefault();
                var _id = $(this).data('id');
                var url = '../Applications/AllApplicationDetails?' + _id;
                window.open(url, '_blank');
            });
        });

        $('#dtable').find('.app-history').each(function (e) {
            $(this).click(function (e) {
                e.preventDefault();
                var _id = $(this).data('id');
                var url = '../Applications/AllApplicationHistory?' + _id;
                window.open(url, '_blank');
            });
        });

        $('#dtable').find('.edit-button').each(function () {
            $(this).click(function (e) {
                e.preventDefault();
                var _id = $(this).data('id');
                $.ajax({
                    type: "GET",
                    url: "/api/br_api/fetchAppForm?Id=" + _id,
                    contentType: "application/json; charset=utf-8",
                    async: true,
                    success: function (response) {
                        if (response.ComplaintName !== null && response.ComplaintName !== '') {
                            $('#UserID').text(response.UserID);
                            $('#ApplicationNumber').text(response.ApplicationNumber);
                            $('#Email').text(response.Email);
                            $('#PhoneNumber').text(response.PhoneNumber);
                            $('#Country').text(response.Country);
                            $('#TransactionStatus').text(response.ApplicationStatus);
                            $('#TransactionType').text(response.TransactionType);
                            $('#TransactionAmount').text(response.TransactionAmount);
                        }
                        else {
                            var msg = 'Error Occurred.<br/>';
                            alert(msg += response.ResponseMsg);
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
                }).done(function () {

                });
            });
        });

        $('#dtable').find('.app-delete').each(function () {
            $(this).click(function (e) {
                e.preventDefault();
                var _id = $(this).data('id');
                var request = {
                    'ApplicationNumber': _id
                };
                var _data = JSON.stringify(request);
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You want to delete this Application!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, dont'
                }).then((result) => {
                    if (result.value) {
                        $.ajax({
                            type: "POST",
                            url: "/api/br_api/del-app",
                            contentType: "application/json; charset=utf-8",
                            data: _data,
                            cache: false,
                            success: function (resp) {
                                if (resp.ResponseCode !== null && resp.ResponseCode === '00') {
                                    swal.fire(
                                        "Success!",
                                        resp.ResponseMsg,
                                        "success"
                                    ).then(function () {
                                        location.reload();
                                    });
                                }
                                if (resp.ResponseCode !== null && resp.ResponseCode === '96') {
                                    swal.fire(
                                        "Warning!",
                                        resp.ResponseMsg,
                                        "warning"
                                    )
                                }
                            },
                            failure: function (resp) {
                                swal.fire(
                                    "Internal Error",
                                    "Oops, Error Occurred.",
                                    "error"
                                )
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire(
                            'Cancelled',
                            'You have cancelled your request',
                            'error'
                        )
                    }
                })
            });
        });



    });
</script>

<style type="text/css">

    .rcorners3 {
        border-radius: 25px;
    }
</style>









