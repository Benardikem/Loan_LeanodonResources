@model Web.Models.UserModel

@{
    ViewBag.Title = "Users Awaiting Approval";
}
@section breadcrumb {
    <li class="breadcrumb-item active" aria-current="page">Users Awaiting Approval</li>
}

@using Web.Extensions
@Html.MessageLabel()
@using (Html.BeginForm("Approval", "Users", FormMethod.Post, new { id = "form1" }))
{
<section class="content">
    <div class="row">
        <div class="col-12">
            <div class="box box-solid bg-dark">
                <div class="box-header with-border">
                    <h3 class="box-title">Users Awaiting Approval</h3>
                    <h6 class="box-subtitle">Should you want your users to be approved, this is where they are to be approved, you can export to Copy, CSV, Excel, PDF & Print</h6>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="table-responsive">
                        <table id="example" class="table table-bordered table-hover display nowrap margin-top-10 w-p100">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>User ID</th>
                                    <th>Mobile</th>
                                    <th>Active</th>
                                    <th>Created By</th>
                                    <th>Date Created</th>
                                    <th>Date Modified</th>
                                    <th class="no-sort"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.UserItems)
                                {
                                    <tr>
                                        <td>@item.DisplayName</td>
                                        <td>@item.UserID</td>
                                        <td>@item.Number</td>
                                        <td>@item.Active</td>
                                        <td>@item.AddedBy</td>
                                        <td>@String.Format("{0:dd-MMM-yyyy HH:mm}", @item.AddedDate)</td>
                                        <td>@String.Format("{0:dd-MMM-yyyy HH:mm}", @item.ModifiedDate)</td>
                                        <td>
                                            <a href="javascript:;" data-id="@item.UserID" class="btn btn-sm btn-primary approve-button" title="Approve Users" data-toggle="modal" data-target="#modaldemo1"><i class="fa fa-arrow-up"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div id="modaldemo1" class="modal fade effect-rotate-left" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <form>
                        <div class="modal-header">
                            <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold" id="modal-header-text">Approve Users</h6>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body wd-800">
                            <div class="row">
                                <div class="form-group col-lg-4">
                                    <label class="section-label-sm tx-gray-500">User ID</label>
                                    <h6 class="tx-gray-800" id="UserId"></h6>
                                </div>
                                <div class="form-group col-lg-4">
                                    <label for="DisplayName" class="section-label-sm tx-gray-500">Name</label>
                                    <h6 id="DisplayName" class="tx-gray-800" />
                                </div>
                                <div class="form-group col-lg-4">
                                    <label for="EmailAddress" class="section-label-sm tx-gray-500">E-Mail</label>
                                    <h6 id="EmailAddress" class="tx-gray-800" />
                                </div>
                                <div class="form-group col-lg-4">
                                    <label for="MobilePhone" class="section-label-sm tx-gray-500">Mobile</label>
                                    <h6 id="MobilePhone" class="tx-gray-800" />
                                </div>
                                <div class="form-group col-lg-4">
                                    <label for="Active" class="section-label-sm tx-gray-500">Active?</label>
                                    <h6 id="Active" class="tx-gray-800" />
                                </div>
                            </div>
                            <div class="row role-row">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" id="SaveButton" class="btn btn-primary">Approve</button>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
   
    

    
}


<script type="text/javascript">
    $(document).ready(function () {
        var _Form = $('#form1');

        $('#payment').find('.approve-button').each(function () {
            $(this).click(function (e) {
                e.preventDefault();
                _Form[0].reset();
                showWait();
                msgbox = $('#msgbox2', _Form);
                var _id = $(this).data('id');
                var ajaxRequest = $.ajax({
                    type: "GET",
                    url: "/api/user/fetch?Id=" + _id,
                    contentType: "application/json; charset=utf-8",
                    async: true,
                    success: function (response) {
                        if (response.DisplayName != null && response.DisplayName != '') {
                            $('#UserId').text(response.UserID);
                            $('#DisplayName').text(response.DisplayName);
                            $('#MobilePhone').text(response.Phone);
                            $('#Active').text(response.Active);
                            $('#EmailAddress').text(response.EmailAddress);
                            $('#RoleGrid').find(".user-role").each(function () {
                                $(this).attr('disabled', true);
                            });
                            if (response.Roles != null && response.Roles.length > 0) {
                                var roleTable = '<table class="table table-detail"><thead><tr><th>Roles</th></tr></thead><tbody>';
                                for (index = 0; index < response.Roles.length; index++) {
                                    try {
                                        roleTable += '<tr><td>' + response.Roles[index].Name + '</td></tr>';
                                    }
                                    catch (ea) { }
                                }
                                roleTable += '</tbody></table>';
                                $('.role-row').html(roleTable);
                            }
                            hideWait();
                            $('#modaldemo1').modal({
                                'backdrop': 'static',
                                "keyboard": false,
                                "show": true
                            });
                        }
                        else {
                            var msg = 'Error Occurred.<br/>';
                            msg += response.ResponseMsg;
                            errorHandler(msg);
                            hideWait();
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        errorHandler(errorThrown);
                        hideWait();
                    }
                }).done(function () {

                });
            });
        });

        _Form.submit(function (e) {
            msgbox = $('#msgbox', _Form);
            e.preventDefault();
            bootbox.confirm({
                title: "Confirmation",
                message: "Are you sure you want to submit the request?",
                buttons: {
                    cancel: {
                        label: '<i class="fa fa-times"></i> Cancel',
                    },
                    confirm: {
                        label: '<i class="fa fa-check"></i> Confirm',
                    }
                },
                callback: function (result) {
                    if (result) {
                        RequestStarted($("#SaveButton"));
                        try {
                            $.ajax({
                                type: "GET",
                                url: "/api/user/approve?Id=" + $('#UserId').text(),
                                contentType: "application/json; charset=utf-8",
                                async: true,
                                success: function (response) {
                                    if (response.ResponseCode != null && response.ResponseCode == '00') {
                                        bootbox.alert({
                                            message: "Your request has been submitted successfully!",
                                            title: "Success",
                                            backdrop: false,
                                            callback: function () {
                                                window.location.reload(false);
                                            }
                                        });
                                    }
                                    else {
                                        var msg = 'Error Occurred.<br/>';
                                        msg += response.ResponseMsg;
                                        errorHandler(msg);
                                        RequestEnded();
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    errorHandler(errorThrown);
                                    RequestEnded();
                                }
                            });
                        }
                        catch (e) {
                            errorHandler('Error Occurred');
                            RequestEnded();
                        }
                    }
                }
            });
        });

        try {

            $('#payment').DataTable({
                'order': [[0, 'asc']],
                'columnDefs': [{ 'orderable': false, 'targets': [7] }],
                "language": {
                    "emptyTable": "There are no request at present.",
                    "zeroRecords": "There were no matching requests found."
                },
                "searching": false, // <-- this should be set to true
                "ordering": true, // <-- this should be set to true
                "paging": true, // <-- this should be set to true
                "pageLength": 25,
                'dom': 'Bfrtip',
                "Filter": false,
                "bLengthChange": false,
                "responsive": true,
            });
        }
        catch (e) { }
    });
</script>